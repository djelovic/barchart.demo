import { PromiseGetter } from '../utilities/async.js';
export declare class ListBox extends HTMLElement {
    private readonly _shadow;
    private readonly _root;
    private readonly _additionalStyles;
    private readonly _arrayListener;
    private _isConnected;
    private _template?;
    private _dataSource?;
    private _abortController;
    private readonly _content;
    private _loadStatus;
    private _selectedIndex;
    private _observedArray?;
    private _draggedElementIndex?;
    private _dropTarget?;
    constructor();
    static get observedAttributes(): string[];
    attributeChangedCallback(name: string, oldValue: string | null, newValue: string | null): void;
    connectedCallback(): void;
    disconnectedCallback(): void;
    adoptedCallback(): void;
    get dataSource(): PromiseGetter<Iterable<any>> | undefined;
    set dataSource(ds: PromiseGetter<Iterable<any>> | undefined);
    get templateId(): string | null;
    set templateId(id: string | null);
    get externalStylesTemplateId(): string | null;
    set externalStylesTemplateId(id: string | null);
    private set template(value);
    private updateContent;
    private createElement;
    private loadElements;
    private onArrayChanged;
    private findItemInEventPath;
    private getPreviousFocusable;
    private getNextFocusable;
    private onKeyDown;
    private onDoubleClick;
    private onMouseDown;
    private onKeyPress;
    private itemFromElement;
    private onDragStart;
    private onDragOver;
    private onDragLeave;
    private onDrop;
    private onDragEnd;
    private onFocusIn;
    get selectedIndex(): number;
    set selectedIndex(index: number);
    get itemCount(): number;
    getItem(index: number): any;
}
